
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$shopping-primary: mat-palette($mat-indigo);
$shopping-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$shopping-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$shopping-theme: mat-light-theme($shopping-primary, $shopping-accent, $shopping-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($shopping-theme);

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$shopping-primary: mat-palette($mat-teal);
$shopping-accent: mat-palette($mat-blue-grey, 400, 200, 600);

// The warn palette is optional (defaults to red).
$shopping-warn: mat-palette($mat-deep-orange);

// Create the theme object (a Sass map containing all of the palettes).
$shopping-theme: mat-light-theme(
	$shopping-primary,
	$shopping-accent,
	$shopping-warn
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($shopping-theme);

/* You can add global styles to this file, and also import other style files */
// BULMA Imports
@import "../node_modules/bulma-scss/utilities/_all";
@import "../node_modules/bulma-scss/base/_all";
@import "../node_modules/bulma-scss/elements/_all";
@import "../node_modules/bulma-scss/form/_all";
@import "../node_modules/bulma-scss/components/_all";
@import "../node_modules/bulma-scss/grid/_all";
@import "../node_modules/bulma-scss/helpers/_all";
@import "../node_modules/bulma-scss/layout/_all";
@import "./assets/block-list";
@import "./assets/variables";

$brandColor : hsl(166, 67%, 51%);
$background : rgb(247, 247, 247);
$textDark: hsla(0, 0%, 0%, 0.66);
$textLight: hsla(0, 0%, 0%, 0.33);

html,body {
	min-height: 100vh;
	position: relative;
}
body {
	margin: 0;
	padding:0;
	font-family: Roboto, "Helvetica Neue", sans-serif;
	background: $background-light;
	color: $textDark;
	min-height: 100vh;
}

// Helpers
.flex-grow-1{
	flex-grow: 1;
}
.flex-shrink-1{
	flex-shrink: 1;
}
.w-full{
	width: 100%;
}
.w-half{
	width: 50%;
}
.w-one-third{
	width: 33.33%;
}
.close-button{
	cursor: pointer;
	color:rgb(219, 80, 80);
	&:hover{
		color:rgb(161, 56, 56);
	}
}
.app-heading{
	margin-bottom: 3rem !important;
	&.with-buttons{
		display: flex;
		justify-content: space-between;
	}
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

// bulma additions
.control{
	&.date{
		position: relative;
		.date-toggle{
			position: absolute;
			top: 0px;
			right: 5px;
		}
	}
}
